{"version":3,"file":"js/5169.ec191dd9.js","mappings":"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","sources":["webpack://bizMOB4Vue/./src/shared/components/FormatInput/FormatInput.html","webpack://bizMOB4Vue/./src/shared/components/FormatInput/FormatInput.vue?7d1a","webpack://bizMOB4Vue/./src/shared/components/FormatInput/FormatInput.vue"],"sourcesContent":["import { normalizeClass as _normalizeClass, resolveDirective as _resolveDirective, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4a7bda2a\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"line type_amount sc-ion-input-md-h sc-ion-input-md-s md\" }\nconst _hoisted_2 = [\"placeholder\", \"readonly\", \"type\", \"value\"]\n\nexport function render(_ctx, _cache) {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")\n  const _directive_formatinput = _resolveDirective(\"formatinput\")\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _withDirectives(_createElementVNode(\"input\", {\n      class: _normalizeClass([\"native-input sc-ion-input-md\", {paddingInput : _ctx.clearable}]),\n      placeholder: _ctx.placeholder,\n      readonly: _ctx.disabled,\n      type: _ctx.getInputType,\n      autocomplete: \"off\",\n      autocorrect: \"off\",\n      name: \"ion-input-16\",\n      value: _ctx.formatValue,\n      onChange: _cache[0] || (_cache[0] = (...args) => (_ctx.change && _ctx.change(...args))),\n      onInput: _cache[1] || (_cache[1] = (...args) => (_ctx.input && _ctx.input(...args))),\n      onfocus: \"this.removeAttribute('readonly')\"\n    }, null, 42, _hoisted_2), [\n      [_directive_formatinput, _ctx.config]\n    ]),\n    (_ctx.formatValue && _ctx.clearable)\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 0,\n          class: \"btn_del\",\n          onClick: _cache[2] || (_cache[2] = (...args) => (_ctx.onClearValue && _ctx.onClearValue(...args)))\n        }, [\n          _createVNode(_component_font_awesome_icon, {\n            class: \"icon-close\",\n            icon: ['fa-solid', 'fa-times']\n          })\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","\nimport { PropType, defineComponent } from 'vue'\nimport { CustomInputEvent } from './lib/core'\nimport directive from './lib/directive'\nimport { Input, InputType } from './lib/format-input.type'\n\nexport default defineComponent({\n    name: 'AccountInput',\n    directives: {\n        formatinput: directive\n    },\n    props: {\n        inputType: {\n            required: true,\n            type: String as PropType<InputType>,\n            default: 'currency'\n        },\n        modelValue: {\n            type: [String, Number],\n            required: true\n        },\n        value: {\n            type: [String, Number]\n        },\n        placeholder: {\n            type: String,\n            default: ''\n        },\n        clearable: {\n            type: Boolean,\n            default: true\n        },\n        isReturnFormatValue: {\n            type: Boolean,\n            default: false\n        },\n        prefill: {\n            type: Boolean,\n            default: true\n        },\n        prefix: {\n            type: String,\n            default: ''\n        },\n        suffix: {\n            type: String,\n            default: ''\n        },\n        decimal: {\n            type: String,\n            default: '.'\n        },\n        separator: {\n            type: String,\n            default: ''\n        },\n        fractionDigits: {\n            type: Number,\n            default: 2\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        }\n    },\n    emits: ['update:modelValue', 'input:modelValue', 'change', 'input'],\n    data() {\n        const formatValue = this.modelValue as Input | undefined\n        const unformatValue = '' as Input | undefined\n        const isClear = false\n        return {\n            formatValue,\n            unformatValue,\n            isClear\n        }\n    },\n    watch: {\n        modelValue(newValue, oldValue) {\n            if (newValue !== oldValue) {\n                this.formatValue = newValue\n            }\n        }\n    },\n    computed: {\n        config() {\n            let newConfig = {...this.$props}\n            // Set default some props by type\n            if(this.inputType === 'currency') {\n                const separator = this.separator === '' ? ',' : this.separator\n                newConfig = { ...this.$props, separator }\n\n            } else if (this.inputType === 'account-number') {\n                const separator = this.separator === '' ? ' ' : this.separator\n                newConfig = { ...this.$props, separator }\n\n            } else if (this.inputType === 'card-number') {\n                const separator = this.separator === '' ? ' ' : this.separator\n                newConfig = { ...this.$props, separator }\n\n            } else if (this.inputType === 'phone-number') {\n                const separator = this.separator === '' ? ' ' : this.separator\n                const prefix = this.prefix === '' ? '0' : this.prefix\n                newConfig = { ...this.$props, separator, prefix }\n            } else if (this.inputType === 'expiry-date') {\n                const separator = this.separator === '' ? '/' : this.separator\n                newConfig = { ...this.$props, separator }\n            }\n            return newConfig\n        },\n        getInputType() {\n            return this.inputType !== 'cvv' ? 'text' : 'password'\n        },\n        emittedValue() {\n            return this.isReturnFormatValue ? this.formatValue : this.unformatValue\n        },\n    },\n    methods: {\n        input(event: Event) {\n            this.isClear = false\n            const { target } = event as CustomInputEvent\n            this.formatValue = target.formatValue\n            this.unformatValue = target.unformatValue\n            this.$emit('input:modelValue', this.emittedValue)\n            this.$emit('input', event)\n        },\n        change(event: Event) {\n            // To wait for btn clear trigger or not\n            setTimeout(() => {\n                if(this.isClear) return\n                this.$emit('update:modelValue', this.emittedValue)\n                this.$emit('change', event)\n            }, 100);\n        },\n        onClearValue() {\n            this.isClear = true\n            this.formatValue = \"\"\n            this.unformatValue = \"\"\n            this.$emit('input:modelValue', \"\")\n            this.$emit('update:modelValue', \"\")\n            const clearEvent = {\n                target: { formatValue: '', unformatValue: ''}\n            }\n            this.$emit('change', clearEvent)\n        }\n    }\n})\n","import { render } from \"./FormatInput.html?vue&type=template&id=4a7bda2a&scoped=true&ts=true\"\nimport script from \"./FormatInput.vue?vue&type=script&lang=ts\"\nexport * from \"./FormatInput.vue?vue&type=script&lang=ts\"\n\nimport \"./FormatInput.vue?vue&type=style&index=0&id=4a7bda2a&lang=scss&scoped=true\"\n\nimport exportComponent from \"/workspace/source/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4a7bda2a\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","render","_ctx","_cache","_component_font_awesome_icon","_resolveComponent","_directive_formatinput","_resolveDirective","_openBlock","_createElementBlock","_withDirectives","_createElementVNode","_normalizeClass","paddingInput","clearable","placeholder","readonly","disabled","type","getInputType","autocomplete","autocorrect","name","value","formatValue","onChange","args","change","onInput","input","onfocus","config","key","onClick","onClearValue","_createVNode","icon","_createCommentVNode","defineComponent","directives","formatinput","directive","props","inputType","required","String","default","modelValue","Number","Boolean","isReturnFormatValue","prefill","prefix","suffix","decimal","separator","fractionDigits","emits","data","this","unformatValue","isClear","watch","newValue","oldValue","computed","newConfig","$props","emittedValue","methods","event","target","$emit","setTimeout","clearEvent","__exports__"],"sourceRoot":""}